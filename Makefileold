# Define all directories
PROJDIR := $(realpath $(CURDIR)/..)
BINDIR := $(PROJDIR)/bin
BUILDDIR := $(BINDIR)/build
OBJDIRS := $(BINDIR)/obj
SOURCEDIR := $(PROJDIR)/src 

DIRS = core commands misc
#DIRS := $(sort $(dir $(wildcard $(SOURCEDIR)/*)))

SRCDIRS = $(foreach dir, $(DIRS), $(addprefix $(SOURCEDIR)/, $(dir)))

TARGETDIR = $(foreach dir, $(DIRS), $(addprefix $(BUILDDIR)/, $(dir)))

# Define include path.
INC_DIR = $(foreach dir, $(SRCDIRS), $(addprefix -I, $(dir)))

VPATH = $(SRCDIRS)

SRCS = $(foreach dir,$(SRCDIRS),$(wildcard $(dir)/*.c))

OBJS := $(subst $(SRCDIRS),$(OBJDIRS),$(SRCS:.c=.o))
DEPS = $(OBJS:.o=.d)

TARGET = azShell

CC = gcc

CFLAGS = -g3 -Wall -Wextra -Werror -Wshadow -Wdouble-promotion -Wformat=2 -Wformat-truncation -Wundef -fno-common \
	 -Wpedantic -Wconversion -Wcast-align -Wunused -Wpointer-arith -Wcast-qual \
	 -Wmissing-prototypes -Wno-missing-braces 

PSEP = $(strip /)

define generateRules
$(1)/%.o: %.c
	@echo Building $$@
	$(CC) -c $$(CFLAGS) $$(INC_DIR) -o $$(subst /,$$(PSEP),$$@) $$(subst /,$$(PSEP),$$<) -MMD
endef

.PHONY: all clean directories

all: directories $(TARGET)

$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) $(OBJS) -o $(TARGET)

#$(TARGET): $(OBJS)
#	@echo -e "\t" $(CC) $(CFLAGS) $(OBJS) $(TARGET) -o $@
#	$(CC) $(OBJS) $(CFLAGS) -o $(TARGET) 

-include $(DEPS)

$(foreach targetdir, $(TARGETDIR), $(eval $(call generateRules, $(targetdir))))

directories:
	mkdir -p $(subst /,$(PSEP),$(TARGETDIR)) 2>/dev/null

clean:
	rm -rf $(subst /,$(PSEP),$(TARGETDIR)) 2>/dev/null
	rm -rf $(TARGET) 2>/dev/null
	@echo Done Cleaning!
